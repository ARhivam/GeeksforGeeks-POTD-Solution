class Solution {
  public:
    int rowWithMax1s(vector<vector<int> > arr) {
        int n = arr.size();
        int m = arr[0].size();
        int max1sRowIndex = -1;
        int max1sCount = 0;
        for (int i = 0; i < n; ++i) {
            int first1Index = findFirst1Index(arr[i]);
            if (first1Index != -1) {
                int num1s = m - first1Index; 
                if (num1s > max1sCount) {
                    max1sCount = num1s;
                    max1sRowIndex = i;
                }
            }
        }
        return max1sRowIndex;
    }
private:
    int findFirst1Index(const vector<int>& row) {
        int low = 0, high = row.size() - 1;
        while (low <= high) {
            int mid = low + (high - low) / 2;
            if (row[mid] == 1) {
                if (mid == 0 || row[mid - 1] == 0) {
                    return mid;
                } else {
                    high = mid - 1;
                }
            } else {
                low = mid + 1;
            }
        }
        return -1; 
    }
};
